{"ast":null,"code":"import _slicedToArray from \"/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/app/src/components/Content.js\";\nimport React, { useEffect, useState } from 'react';\nimport DragItem from './DragItem';\nimport { DndProvider } from 'react-dnd';\nimport Backend from 'react-dnd-html5-backend';\n\nfunction Content(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        dataset = _useState2[0],\n        setDataset = _useState2[1];\n\n  useEffect(() => {\n    console.log(\"Component mounted successfully!\");\n    var request = new Request('http://localhost:' + props.port + '/banks', {\n      method: 'GET',\n      mode: 'cors',\n      cache: 'no-cache'\n    });\n    fetch(request).then(response => response.json()).then(data => {\n      console.log(data);\n      setDataset(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [props.port]);\n\n  const updateData = (id, index) => {\n    let newdata = {\n      pos: index\n    };\n    var request = new Request('http://localhost:' + props.port + '/banks/' + id, {\n      method: 'PUT',\n      mode: 'cors',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify(newdata)\n    });\n    fetch(request).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const callbackOrderChange = newGrid => {\n    console.log(newGrid);\n    newGrid.forEach((card, i) => {\n      card.position = i;\n      updateData(card.id, i);\n    });\n    setDataset(newGrid);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(DndProvider, {\n    backend: Backend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(DragItem, {\n    content: dataset,\n    onOrderChange: callbackOrderChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n}\n\nexport default Content;","map":{"version":3,"sources":["/app/src/components/Content.js"],"names":["React","useEffect","useState","DragItem","DndProvider","Backend","Content","props","dataset","setDataset","console","log","request","Request","port","method","mode","cache","fetch","then","response","json","data","catch","err","updateData","id","index","newdata","pos","headers","Headers","body","JSON","stringify","callbackOrderChange","newGrid","forEach","card","i","position"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA,oBACUL,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,QACbM,OADa;AAAA,QACJC,UADI;;AAGpBR,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,QAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,sBAAsBN,KAAK,CAACO,IAA5B,GAAmC,QAA/C,EAAyD;AACnEC,MAAAA,MAAM,EAAE,KAD2D;AAEnEC,MAAAA,IAAI,EAAE,MAF6D;AAGnEC,MAAAA,KAAK,EAAE;AAH4D,KAAzD,CAAd;AAKAC,IAAAA,KAAK,CAACN,OAAD,CAAL,CACCO,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACZZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACAb,MAAAA,UAAU,CAACa,IAAD,CAAV;AACH,KALD,EAMCC,KAND,CAMQC,GAAD,IAAS;AACZd,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACH,KARD;AASH,GAhBQ,EAgBP,CAACjB,KAAK,CAACO,IAAP,CAhBO,CAAT;;AAmBA,QAAMW,UAAU,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AAC9B,QAAIC,OAAO,GAAG;AAACC,MAAAA,GAAG,EAAEF;AAAN,KAAd;AACA,QAAIf,OAAO,GAAG,IAAIC,OAAJ,CAAY,sBAAsBN,KAAK,CAACO,IAA5B,GAAmC,SAAnC,GAA+CY,EAA3D,EAA+D;AACzEX,MAAAA,MAAM,EAAE,KADiE;AAEzEC,MAAAA,IAAI,EAAE,MAFmE;AAGzEc,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AAAE,wBAAgB;AAAlB,OAAZ,CAHgE;AAIzEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAJmE,KAA/D,CAAd;AAMAV,IAAAA,KAAK,CAACN,OAAD,CAAL,CACCO,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACZZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACH,KAJD,EAKCC,KALD,CAKQC,GAAD,IAAS;AACZd,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ;AACH,KAPD;AAQH,GAhBD;;AAkBA,QAAMW,mBAAmB,GAAIC,OAAD,IAAa;AACrC1B,IAAAA,OAAO,CAACC,GAAR,CAAYyB,OAAZ;AACAA,IAAAA,OAAO,CAACC,OAAR,CAAgB,CAACC,IAAD,EAAMC,CAAN,KAAY;AACxBD,MAAAA,IAAI,CAACE,QAAL,GAAgBD,CAAhB;AACAd,MAAAA,UAAU,CAACa,IAAI,CAACZ,EAAN,EAAUa,CAAV,CAAV;AACH,KAHD;AAIA9B,IAAAA,UAAU,CAAC2B,OAAD,CAAV;AACH,GAPD;;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAE/B,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEG,OAAnB;AAA4B,IAAA,aAAa,EAAE2B,mBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAQH;;AAED,eAAe7B,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DragItem from './DragItem';\nimport { DndProvider } from 'react-dnd';\nimport Backend from 'react-dnd-html5-backend';\n\nfunction Content(props) {\n    const [dataset, setDataset] = useState([])\n\n    useEffect(() => {\n        console.log(\"Component mounted successfully!\")\n        var request = new Request('http://localhost:' + props.port + '/banks', {\n            method: 'GET',\n            mode: 'cors',\n            cache: 'no-cache'\n        }); \n        fetch(request)\n        .then((response) => response.json())\n        .then((data) => {\n            console.log(data)\n            setDataset(data)\n        })         \n        .catch((err) => {\n            console.log(err);\n        });\n    },[props.port])\n\n\n    const updateData = (id, index) => {\n        let newdata = {pos: index}\n        var request = new Request('http://localhost:' + props.port + '/banks/' + id, {\n            method: 'PUT',\n            mode: 'cors',\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n            body: JSON.stringify(newdata)\n        });     \n        fetch(request)\n        .then((response) => response.json())\n        .then((data) => {\n            console.log(data)\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }\n\n    const callbackOrderChange = (newGrid) => {\n        console.log(newGrid)\n        newGrid.forEach((card,i) => {\n            card.position = i;\n            updateData(card.id, i)\n        })\n        setDataset(newGrid)\n    }\n\n    return (\n        <div>   \n            <DndProvider backend={Backend}>\n                <DragItem content={dataset} onOrderChange={callbackOrderChange}/>\n            </DndProvider>              \n        </div>    \n    )\n\n}\n\nexport default Content"]},"metadata":{},"sourceType":"module"}